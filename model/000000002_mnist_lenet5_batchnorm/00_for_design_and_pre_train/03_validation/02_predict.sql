-- set min_parallel_table_scan_size = 8;
-- set min_parallel_index_scan_size = 16;
-- set force_parallel_mode = 'off';
-- set max_parallel_workers_per_gather = 1;
-- set parallel_setup_cost = 10000;
-- set parallel_tuple_cost = 10000.0;

-- 单条输入预测
select 
     a_pred_out_arr :: decimal[] ~=` 4
from 
  sm_sc.ft_nn_in_out_p
  (
    -000000002
  , $sess_id -- 这里填入申请到的 o_output_sess_id
  , sm_sc.fv_mx_ele_2d_2_3d
    (
      array
      [[000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,108,253,211,121,121,038,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,051,239,252,252,252,252,222,096,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,050,240,252,252,252,252,252,252,235,040,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,005,171,253,252,252,252,252,252,252,252,106,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,120,252,253,252,142,095,203,252,252,231,022,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,146,252,253,195,012,000,018,066,066,059,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,126,252,253,252,026,000,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,005,176,253,252,111,000,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,133,253,252,163,003,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,133,253,252,252,039,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,255,253,253,039,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,253,252,252,039,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,253,252,252,039,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,073,123,087,000,000,000,000,000,253,252,252,082,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,029,233,252,185,000,000,000,000,000,253,252,252,172,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,177,252,252,235,089,045,000,000,000,253,252,252,172,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,107,252,252,252,252,239,173,166,111,253,252,252,151,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,039,212,248,252,252,252,252,252,252,253,252,252,039,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,090,106,133,241,252,252,252,253,252,252,039,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,019,119,196,252,253,252,132,019,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
       ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
      ]]
    , 28
    , 2
    , 3
    , false
    )
  ) tb_a_pred_out_arr(a_pred_out_arr)

-- select * from sm_sc.tb_nn_train_input_buff where work_no = -000000002 and ord_no = 32457 limit 5

-- ---------------------------------------------------------------------------------------
-- 训练集或测试机中随机一条
with 
cte_rand_input as 
(
  select 
    num
  , num_arr
  from sm_dat.tb_tmp_mnist_000000002
  limit 1 offset random() * 60000.0 :: float
)
select 
  num                               as a_real_num
, a_pred_out_arr :: decimal[] ~=` 4 as a_predict
, regexp_replace
  (
    regexp_replace
    (
      regexp_replace
      (
        regexp_replace
        (
          regexp_replace
          (
            num_arr :: text 
          , '((\d+,){27,27}\d+)'
          , '\1
'  
          , 'g'
          )
        , '(?<=,|\{)(\d)(?=,|\r|\n)', '00\1', 'g'
        )
      , '(?<=,|\{)(\d\d)(?=,|\r|\n)', '0\1', 'g'
      )
      , '000', '   ', 'g'
      )
    , ',', '', 'g'
    )
  as a_pixel_ex
, num_arr   as a_pixel
from 
  cte_rand_input
, sm_sc.ft_nn_in_out_p
  (
    -000000002
  , $sess_id    -- 这里填入申请到的 o_output_sess_id
  , sm_sc.fv_opr_reshape_py(array[num_arr], array[1, 28, 28])
  ) tb_a_pred_out_arr(a_pred_out_arr)

-- ---------------------------------------------------------------------------------------
-- 数据集中随机获取若干条批量预测
with 
cte_rand as
(
  select 
	   a_no
  from unnest((sm_sc.fv_new_rand(array[1, 10]) *` 60001.0 :: float) :: int[] +` 1) tb_a(a_no) -- 此处的 10 为验证样本抽样数量，可自行调整为少于 60001 的数量，
                                                                                         -- 60001 为 mnist 数据集样本数量，
                                                                                         -- 每个样本 0.5 秒左右，无法并行查询。
),
cte_pred as
(
  select 
       ord_no,
	   i_depdt_01,
       a_pred_out_arr
  from sm_sc.tb_nn_train_input_buff, cte_rand
  , sm_sc.ft_nn_in_out_p
    (
      -000000002
    , $sess_id    -- 这里填入申请到的 o_output_sess_id
    , array[i_indepdt_01]
    ) tb_a_pred_out_arr(a_pred_out_arr)
  where work_no = -000000002
    and ord_no = a_no
)
-- ,
-- cte_out as 
-- (
select 
  ord_no,
  case 
    when ord_no between 1 and 5923
	  then 0
    when ord_no between 5924 and 12665
	  then 1
    when ord_no between 12666 and 18623
	  then 2
    when ord_no between 18624 and 24754
	  then 3
    when ord_no between 24755 and 30596
	  then 4
    when ord_no between 30597 and 36017
	  then 5
    when ord_no between 36018 and 41935
	  then 6
    when ord_no between 41936 and 48200
	  then 7
    when ord_no between 48201 and 54052
	  then 8
    when ord_no between 54053 and 60001
	  then 9
  end as real_out,
  array_position
  (
    sm_sc.fv_mx_ele_2d_2_1d(a_pred_out_arr),
    sm_sc.fv_aggr_slice_max(a_pred_out_arr)
  ) - 1 as pred_out,
  i_depdt_01,
  a_pred_out_arr
from cte_pred
-- )
-- select count(*) from cte_out
-- where real_out <> pred_out
-- ;


-- -------------------------------------------------------
-- mnist 手写体数字位图矩阵可视化处理
-- 
-- ((\d+,){27,27}\d+)           \1\r\n
-- (?<=,|\{)(\d)(?=,|\r|\n)     00\1
-- (?<=,|\{)(\d\d)(?=,|\r|\n)   0\1
-- 000                          替换为三个空格
-- ,                            替换为空