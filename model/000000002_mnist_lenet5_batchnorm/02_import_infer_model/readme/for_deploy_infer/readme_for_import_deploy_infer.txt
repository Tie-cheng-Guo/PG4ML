以下是用于开发调用的部署推理步骤：
准备条件: 
  首先安装 pg4ml 深度学习框架。
一、部署推理模型方法
  1. 导入模型: 
    do
    $$
      declare
        v_work_no     int   := -000000002;
        v_model_node  text  := '/var/lib/pgsql/model/000000002_mnist_lenet5_batchnorm/02_import_infer_model/model_back_up/sm_sc.__vt_nn_node_000000002.gz';
        v_model_path  text  := '/var/lib/pgsql/model/000000002_mnist_lenet5_batchnorm/02_import_infer_model/model_back_up/sm_sc.__vt_nn_path_000000002.gz';
      begin
        call
          sm_sc.prc_import_infer_model_p
          (
            v_work_no
          , v_model_node
          , v_model_path
          )
        ;
      end
    $$
    language plpgsql
  
  2. 控制并发配额的推理，以下方法用于向开发侧开放与管理调用接口
    a. 服务端部署资源池
      do
      $$
        declare
          v_work_no     int   := -000000002;
          v_sess_cnt  int  := 100; -- 连接池大小，自行调整
        begin
          call sm_sc.prc_nn_add_sess
          (
            v_work_no
          , v_sess_cnt             -- 添加的 session 资源数量
          );
        end
      $$
      language plpgsql
    b. 客户端申请连接
      do 
      $$
      declare 
        v_work_no     int   := -000000002;
        o_output_sess_id     bigint;
      begin 
        call sm_sc.prc_nn_subscribe_sess
        (
          v_work_no
        , o_output_sess_id
        )
        ;
      
        raise notice 'subscribe sess_id: %', o_output_sess_id;  
      end
      $$
      language plpgsql
      -- 记下输出的 subscribe sess_id，比如输出为 o_output_sess_id: 9527。
    c. 客户端调用推理接口 
      select 
        a_pred_out_arr :: decimal[] ~=` 4
      from 
        sm_sc.ft_nn_in_out_p
        (
          -000000002  -- 这里填入 work_no
        , $sess_id    -- 这里填入申请到的 o_output_sess_id
        , sm_sc.fv_mx_ele_2d_2_3d
          (
            array
            [[000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,108,253,211,121,121,038,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,051,239,252,252,252,252,222,096,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,050,240,252,252,252,252,252,252,235,040,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,005,171,253,252,252,252,252,252,252,252,106,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,120,252,253,252,142,095,203,252,252,231,022,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,146,252,253,195,012,000,018,066,066,059,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,126,252,253,252,026,000,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,005,176,253,252,111,000,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,133,253,252,163,003,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,133,253,252,252,039,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,255,253,253,039,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,253,252,252,039,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,253,252,252,039,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,073,123,087,000,000,000,000,000,253,252,252,082,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,029,233,252,185,000,000,000,000,000,253,252,252,172,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,177,252,252,235,089,045,000,000,000,253,252,252,172,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,107,252,252,252,252,239,173,166,111,253,252,252,151,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,039,212,248,252,252,252,252,252,252,253,252,252,039,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,090,106,133,241,252,252,252,253,252,252,039,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,019,119,196,252,253,252,132,019,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
             ,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
            ]]
          , 28
          , 2
          , 3
          , false
          )
        ) tb_a_pred_out_arr(a_pred_out_arr)
    d. 释放 session 资源: 
      call sm_sc.prc_nn_release_sess
      (
        -000000002
      , $_sess_id    -- o_output_sess_id       --  这里设置将要释放的 sess_id 资源
      )
      ;
    e. 步骤 b - d 可被多个客户端并发调用
    f. 清理 session 连接池
      清理该模型全部 session 的方法:
      call sm_sc.prc_nn_del_sess
      (
        -000000002
        -- 以下入参也可以自行指定要清理 sess_id 的范围(int8multirange 类型)，只清理部分 sess_id
      , (select int8range(min(sess_id), max(sess_id), '[]') :: int8multirange from sm_sc.__vt_tmp_nn_node where work_no = -000000002)
      )      